// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class SummonDaoStake extends ethereum.Event {
  get params(): SummonDaoStake__Params {
    return new SummonDaoStake__Params(this);
  }
}

export class SummonDaoStake__Params {
  _event: SummonDaoStake;

  constructor(event: SummonDaoStake) {
    this._event = event;
  }

  get signal(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get baal(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get date(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get endDate(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get details(): string {
    return this._event.parameters[4].value.toString();
  }
}

export class TcrSummoner extends ethereum.SmartContract {
  static bind(address: Address): TcrSummoner {
    return new TcrSummoner("TcrSummoner", address);
  }

  _template(): Address {
    let result = super.call("_template", "_template():(address)", []);

    return result[0].toAddress();
  }

  try__template(): ethereum.CallResult<Address> {
    let result = super.tryCall("_template", "_template():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  summonSignalTCR(baal: Address, endDate: BigInt, details: string): Address {
    let result = super.call(
      "summonSignalTCR",
      "summonSignalTCR(address,uint256,string):(address)",
      [
        ethereum.Value.fromAddress(baal),
        ethereum.Value.fromUnsignedBigInt(endDate),
        ethereum.Value.fromString(details),
      ],
    );

    return result[0].toAddress();
  }

  try_summonSignalTCR(
    baal: Address,
    endDate: BigInt,
    details: string,
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "summonSignalTCR",
      "summonSignalTCR(address,uint256,string):(address)",
      [
        ethereum.Value.fromAddress(baal),
        ethereum.Value.fromUnsignedBigInt(endDate),
        ethereum.Value.fromString(details),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get template(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class SummonSignalTCRCall extends ethereum.Call {
  get inputs(): SummonSignalTCRCall__Inputs {
    return new SummonSignalTCRCall__Inputs(this);
  }

  get outputs(): SummonSignalTCRCall__Outputs {
    return new SummonSignalTCRCall__Outputs(this);
  }
}

export class SummonSignalTCRCall__Inputs {
  _call: SummonSignalTCRCall;

  constructor(call: SummonSignalTCRCall) {
    this._call = call;
  }

  get baal(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get endDate(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get details(): string {
    return this._call.inputValues[2].value.toString();
  }
}

export class SummonSignalTCRCall__Outputs {
  _call: SummonSignalTCRCall;

  constructor(call: SummonSignalTCRCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}
